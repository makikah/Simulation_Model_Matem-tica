library(deSolve)
library(ggplot2)
logistic <- function(t, r, K, y0){
K * y0 * exp(r * t) / (K + y0 * (exp(r * t) - 1))
}
t = seq(0, 100, 1)
y <- logistic(t = t, r = 0.1, K = 10, y0 = 0.1)
series = data.frame(t, y)
ggplot(series, aes(x=t, y = y) ) +
geom_line() +
theme_light()
model <- function (time, y, parms){
with( as.list( c(y, parms) ), {
dy <- r * y * (1 - y / K)
list(dy)
}
) # end with
} # end function
y <- c(y = 0.1)
parms <- c(r = 0.1, K = 10)
t = seq(0, 100, 1)
out <- ode(y, t, model, parms)
head(out)
class(out)
series_ode = as.data.frame(out)
ggplot(series_ode, aes(x=time, y = y) ) +
geom_line() +
theme_light()
?ode
library(mosaic)
library(ade4)
library(manipulateWidget)
plotFun(A * (L^0.7) * (K^0.3) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
solow <- function(time, y, parms){
with( as.list( c(y, parms) ) , {
dk = s*a*k^alpha - (n+delta)*k
list(dk)
}
)# end with
} # end solow
k <- c(k = 0.1)
parms <- c(s = 0.1, a = 10, alpha = 0.25, n = 0.15, delta = 0.05)
times <- seq(0, 100, 1)
out <- ode(k, times, solow, parms)
solow_ode = as.data.frame(out)
ggplot(solow_ode, aes(x=time, y = k) ) +
geom_line() +
theme_light()
plotFun(A * (L^0.7) * (K^0.3) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^0.8) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^2) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^1) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^0.3) ~ L, K = 20, A = 5, ylim = range(-5,101),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^0.3) ~ L, K = 20, A = 5, ylim = range(-5, 151),
xlim = range(-1, 21))
plotFun(A * (L^0.7) * (K^0.3) ~ L, K = 40, A = 5, ylim = range(-5, 151),
xlim = range(-1, 21), lty = 2, add = TRUE)
plotFun(A * (L^0.7) * (K^0.3) ~ L & K, A = 5, filled = FALSE,
xlim = range(0, 21), ylim = range(0, 100))
plotFun(A * (L^0.7) * (K^0.3) ~ L & K, A = 5, filled = FALSE,
xlim = range(0, 21), ylim = range(0, 100), surface = TRUE)
q()
